{"name":"Atinux-Books Backbone.Marionette AMD/Requirejs","tagline":"A reimplementation of http://www.atinux.fr/backbone-books in Backbone.Marionette using REQUIREJS","body":"## Marionette Bookstore ##\r\n### Backbone.Marionette application using RequireJS/AMD and Coffescript ###\r\n\r\n**See this LIVE [Marionette Bookstore](https://c9.io/t2k/backbone_marionette-requirejs/workspace/indexAMD.html) application before digging in...**\r\n\r\n![Screenshot][ss]\r\n\r\n[ss]:  https://github.com/t2k/backbone.marionette-RequireJS/raw/master/assetsAMD/doc/MarionetteBooks.png \"Screen shot: Marionette Bookstore-AMD\"\r\nThis is a 100% client-side Single Page Application utilizing the [Google Books API](https://developers.google.com/books/docs/v1/using#WorkingVolumes) as\r\na data source.  It is not a true *WebApp* because there's no server-side responsibility for setting up endpoints-- with the additional stack overhead of including libraries such as: __NodeJS: connect/express, MongoDB or Ruby: active-record__.\r\nThe simplicity of a SPA allows us to focus on learning _Marionette, AMD_ and application architecture ideas borrowed from the **Rails Asset Pipeline**.  I struggled a bit with Backbone.Marionette and RequireJS; most of my struggles were consequence of my enterprise C#/VB.NET server-side background, so coming to grips with modular javascript client application architecture was way more of a challenge than I had expected.  I hope this repo can help others get up to speed faster than I did!\r\n\r\n### CoffeeScript! ###\r\nSwitching to coffeescript has made me a javascript __BALLER!__ I knew about coffee-script,  read the little book about it, but never changed my ways.  After watching Brian Mann's screencast and seeing it in action, I became convinced of the power and flexibility of coffeescript and it's ease of use.  I'm SO much better a _JavaScript_ programmer because of it.  BTW, you should follow the creator of Coffee-script [Jeremy Ashkenas](https://twitter.com/jashkenas)\r\n\r\nSo easy to install, it's a shame not to:\r\n~~~\r\n$ npm install -g coffee-script\r\n~~~\r\n\r\nTo begin using coffee-script in ***this*** project:\r\n~~~\r\n$ coffee -o assetsAMD/js/ -cw assetsAMD/js/\r\n~~~\r\nNow, all changes to any .coffee file is automatically compiled to javascipt. For more coffescript usage info go to the source: [coffeescript.org](http://coffeescript.org) and to help convert your existing javascript to CoffeeScript: __go here [js2coffee.org](http://js2coffee.org)__\r\n\r\n###assets###\r\nThe **assets** folder is the original fork of [David Sulc's repo] https://github.com/davidsulc/backbone.marionette-atinux-books)\r\nI learned alot from David's Marionette app about marionette's application features and it dealt with a more interesting real world back end. The original app used traditional javascript namespacing and modular layout but converting this app over to RequireJS and a modular design required a different approach to the application architecture.  Modular AMD applications can be a blessing and a curse... at the end of the day AMD forces the developer to pursue a higly decoupled modular architecture.\r\n\r\n###assetsAMD###\r\nI've added source located under the **assetsAMD** folder.  Refer to the **assets** folder to see the orig. repo of Backbone.Marionette application using javascript namespacing, which was based on [Atinux] http://www.atinux.fr)'s [Backbone books](http://www.atinux.fr/backbone-books/) example app and covers features, such as external templates, modal dialogs.\r\n\r\n### Updates May-Oct 2013 ###\r\nAfter watching the excellent [BackboneRails](http://backbonerails.com) screencasts I have __Mann__'d up by re-structuring this application's architecture. Brian's excellent tutorials use ruby rails and __Marionette.module__ patter with javascript namespacing.  My focus here was to use an RequireJS/AMD based application architecture.  I've tried to follow the Rails Asset Pipeline approach from Brian's screencast which entails more or less following a consistant folder structure when building out your application/module architecture.  The AMD approach does not follow the same javascript namespaing pattern made so easy by the **Marionette.module** but the AMD approach does offer what I feel is a more modular building block approach with true modules that are not necessarily coupled to the application specific namespaceing patterns.  I used a [msgBus](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/msgbus.coffee) module that leverages **backbone.Wreqr** events, commands and request/response patterns to facilitate inter-application communication.\r\n\r\nI've also updated the project recently to use ***as of Oct 16, 2013*** the latest versions of backbone/marionette and bootstrap 3.\r\n\r\n###config\r\nThe __config__ folder holds global application level configuration for __underscore templatesettings__, __marionette templatecache__ and a custom __Marionette.Region.Dialog__\r\nclass that displays a boostrap modal and also takes care of view/event cleanup.  I picked this up from **Brian Mann**  These techniques are a huge improvement over what I had been using previously.  Don't think I could have coded this stuff with my own hand crafted javascript.\r\n\r\n* [config/_base.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/config/_base.coffee)\r\n* [config/marionette/region/dialog.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/config/marionette/region/dialog.coffee)\r\n* [config/marionette/templatecache.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/config/marionette/templatecache.coffee)\r\n* [config/underscore/templatesettings.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/config/underscore/templatesettings.coffee)\r\n\r\n### index.html\r\nTake a look at [indexAMD.Devel.html](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/indexAMD.Devel.html) or [indexAMDel.html](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/indexAMD.html), the Single Page that gets served for\r\nthis single page application.  One of the benefits of RequireJS/AMD is this simplicity.  There is no right or wrong way to organize a Marionette app, but I favor the AMD approach for it's ease of loading of a single page application.  Notice there is only one javascript loaded **js/main** or **js/main.optimized**\r\n\r\n### main.js\r\nThe [js/main.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/main.coffee) file loaded at the bottom of index.html is the requirejs bootloader.  See __[requirejs.org](http://requirejs.org)__ for up to date information on RequireJS and the benefits of AMD script loading.\r\n\r\n### marionette application start\r\n* [the main app.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/app.coffee)\r\n\r\n### Modular Applications - Rails Asset Pipeline _like_\r\n\r\n### book entities\r\n A __Backbone.Collection [entities/book](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/entities/book.coffee)__\r\nis used to encapsulate the [Google Books API](https://developers.google.com/books/docs/v1/using#WorkingVolumes).  Checkout the __search__, __fetchBooks__ and\r\n__moreBooks__ methods and the msgBus.events setup in the initialize method.  The msgBus pub/sub pattern is used to help create a decoupled modular architecture.\r\n\r\n### book list application\r\nDrill down on the modular source for the apps/book application listed below.  Notice how the apps/book/app _requires_ the apps/book/list/controller module.\r\nThe CONTROLLER _requires_ the VIEWS module and the VIEWS module _requires_ the TEMPLATES module and the __templates__ are ultimately made of __HTML__ snippets in {{MUSTACHE}} format.\r\n* __apps__\r\n    * __book__\r\n        * __list__\r\n            * [controller.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/apps/book/list/controller.coffee) - the book list controller\r\n            * [templates.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/apps/book/list/templates.coffee) - the book list templates\r\n            * [views.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/apps/book/list/views.coffee) - the book list views\r\n            * __templates__ (template files <3 mustache format)\r\n                *  [layout.htm](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/apps/book/list/templates/layout.htm)\r\n                *  [book.htm](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/apps/book/list/templates/book.htm)\r\n                *  [booklist.htm](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/apps/book/list/templates/booklist.htm)\r\n    *  [app.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/apps/book/app.coffee) - apps/book/app  the book application\r\n* [app.coffee](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assetsAMD/js/app.coffee)  - app (the main marionette application)\r\n\r\n### Get to know [BOWER](http://twitter.github.com/bower/) and automatically maintain project dependencies. ###\r\nMy biggest early challenge with open source software was maintaining the ever increasing dependencies.  If you've never used\r\nBOWER](http://twitter.github.com/bower/) I highly recommend taking a the time to detour over there and grok it out.  Grok [NODEJS](http://nodejs.org).\r\nLucky for me I'm using [Cloud9 IDE](https://c9.io) a web based IDE with a built in unix terminal and __SH__ell with Node pre-installed.\r\n\r\n#### Bower and CoffeScript Installation\r\nFrom the terminal/BASH $ prompt:\r\nFirst off, NODE v0.8+ is required for __BOWER__ installation, as I'm writing this, NODE v 6.2.1 is pre istalled in the ***Cloud9 IDE*** but they also pre-install\r\n[NVM Node Version Manager](https://github.com/creationix/nvm) so you can update the Cloud9 workspace to NODE v0.8+ as required for __BOWER__\r\n\r\nPress [alt-t] to open a terminal with [bash shell](http://linuxcommand.org/learning_the_shell.php) commands.  Pretty amazing, the project has a full featured unix environment available in a browser based [Cloud9 IDE](https://c9.io)!\r\n\r\n***Install BOWER and Coffee-script ***\r\n~~~\r\n$ npm install -g bower\r\n$ npm install -g coffee-script\r\n~~~\r\n\r\nBower will be installed globally\r\n\r\n### Project Dependencies ###\r\n* See [bower.json](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/bower.json) to see this project's open source dependencies.\r\n\r\n~~~\r\n$ bower install\r\n~~~\r\n\r\nAs time passes on, update the project dependencies with **ONE** command:\r\n~~~\r\n$ bower update\r\n~~~\r\nEven __I__ can handle that!\r\n\r\n## The M in AMD-- Benefit and a Curse\r\nModular design in javascript is the key to building scaleable and maintainable web applications.  However, each module can create multiple http get\r\nrequests when our page loads.  Remove the __curse__ with [R.js](git://github.com/jrburke/r.js.git) optimizer.\r\n\r\n### [R.js](https://github.com/jrburke/r.js.git) build Optimizer\r\nUsing [R.js](https://github.com/jrburke/r.js.git) optimizer to compress/minimize/uglify your main.js file.  Eliminate or dramatically reduce\r\nserver requests upon you first page load.\r\n\r\n#### optimize javascript loading with R.js\r\nHere's how I did it for this project in __Cloud9IDE__\r\n\r\n__Build the main.optimized.js verions of main.js__\r\n\r\nRun the [buildoptimized.sh](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/buildoptimized.sh) file at the console prompt $\r\n\r\n~~~\r\n./buildoptimized.sh\r\n~~~\r\n***This previous step can/should be scrpted into a grunt/build process***\r\n\r\nThe optimizer 'output' builds the assetsAMD/js/main.optimized.js that gets linked to [indexAMD.html](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/indexAMD.html).\r\n\r\nSEE [indexAMD.Devel.html](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/indexAMD.Devel.html) for details.\r\n\r\nsample background image: ![Image](https://github.com/t2k/backbone.marionette-RequireJS/blob/master/assets/images/bg.jpg?raw=true)\r\n\r\nBig shout-out to [Cloud9 IDE](https://c9.io) and Google Chrome Extension [Cloud 9 Button for Github](https://chrome.google.com/webstore/detail/gkddhhofgajgmgfebhaiihlahjmjkmph)\r\none click to clone/edit any github repo.  Fantastic!\r\n\r\n**Good luck on your open source journey!** and please feel free to drop me a line if you want any help with this project.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}